# -*- Mode:Org; Coding:utf-8; fill-column:158 -*-
#+TITLE:       RPI Tools
#+AUTHOR:      Mitch Richling
#+EMAIL:       http://www.mitchr.me/
#+DESCRIPTION: Software to integrate RPI cameras with ImageJ
#+KEYWORDS:    fiji imagej rpi raspberry pi hq camera
#+LANGUAGE:    en
#+OPTIONS:     num:t toc:nil \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t skip:nil d:nil todo:t pri:nil H:5 p:t author:t html-scripts:nil
#+SEQ_TODO:    TODO:NEW(t)                         TODO:WORK(w)    TODO:HOLD(h)    | TODO:FUTURE(f)   TODO:DONE(d)    TODO:CANCELED(c)
#+HTML_HEAD: <style>body { width: 95%; margin: 2% auto; font-size: 18px; line-height: 1.4em; font-family: Georgia, serif; color: black; background-color: white; }</style>
#+HTML_HEAD: <style>body { min-width: 500px; max-width: 1024px; }</style>
#+HTML_HEAD: <style>h1,h2,h3,h4,h5,h6 { color: #A5573E; line-height: 1em; font-family: Helvetica, sans-serif; }</style>
#+HTML_HEAD: <style>h1,h2,h3 { line-height: 1.4em; }</style>
#+HTML_HEAD: <style>h1.title { font-size: 3em; }</style>
#+HTML_HEAD: <style>h4,h5,h6 { font-size: 1em; }</style>
#+HTML_HEAD: <style>.org-src-container { border: 1px solid #ccc; box-shadow: 3px 3px 3px #eee; font-family: Lucida Console, monospace; font-size: 80%; margin: 0px; padding: 0px 0px; position: relative; }</style>
#+HTML_HEAD: <style>.org-src-container>pre { line-height: 1.2em; padding-top: 1.5em; margin: 0.5em; background-color: #404040; color: white; overflow: auto; }</style>
#+HTML_HEAD: <style>.org-src-container>pre:before { display: block; position: absolute; background-color: #b3b3b3; top: 0; right: 0; padding: 0 0.2em 0 0.4em; border-bottom-left-radius: 8px; border: 0; color: white; font-size: 100%; font-family: Helvetica, sans-serif;}</style>
#+HTML_HEAD: <style>pre.example { white-space: pre-wrap; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; font-family: Lucida Console, monospace; font-size: 80%; background: #404040; color: white; display: block; padding: 0em; border: 2px solid black; }</style>
#+HTML_LINK_HOME: https://www.mitchr.me/
#+HTML_LINK_UP: https://github.com/richmit/microscope
#+EXPORT_FILE_NAME: docs/RPI_tools

#+ATTR_HTML: :border 2 solid #ccc :frame hsides :align center
|          <r> | <l>                                          |
|    *Author:* | /{{{author}}}/                               |
|   *Updated:* | /{{{modification-time(%Y-%m-%d)}}}/ |
#+ATTR_HTML: :align center
Copyright {{{time(%Y)}}} Mitch Richling. All rights reserved.

#+TOC: headlines 5

Check out my home page for more stuff: https://www.mitchr.me/

** RPI Software
:PROPERTIES:
:CUSTOM_ID: rpi-soft
:END:

My goals:

  - Capture images directly from ImageJ/Fiji so I could immediately preform an image analysis
  - My #1 most used image analysis activity is measuring stuff (lengths, etc...) so setting image scale needs to be easy
  - Capture images from the command line as well, but such that it is easy to load them in ImageJ/Fiji later
  - See a live view from the camera
  - Simple to sync data between camera and primary workstation
  - Identical ImageJ/Fiji UI between Windows and RPI

In the end I wrote a command line script and a set of ImageJ/Fiji toolbar macros that work together. I say they work together in that they both save newly
captured images to the same directory using the same file name conventions.  For example, this makes it easy to load the last thing captured by the command
line script into ImageJ/Fiji.

*** RPI Image Capture Script
:PROPERTIES:
:CUSTOM_ID: rpi-pisnap
:END:

This script is pretty simple.  It provides a way to capture one or more images outside of ImageJ/Fiji, but in a way compatible with the ImageJ/Fiji macros
provided below.  I use this script quite a lot to provide a live view of the camera feed.

#+INCLUDE:piSnap.sh src sh

*** ImageJ/Fiji Toolset/Macros 
:PROPERTIES:
:CUSTOM_ID: rpi-imagej
:END:

The code below provides an ImageJ/Fiji toolset.  You activate the tool set via the toolset menu:

#+ATTR_HTML: :align center :width 800
file:RPI_Tools-toolsetmenu.gif

Once activated, it will add four buttons to the toolbar:

#+ATTR_HTML: :align center :width 800
file:RPI_Tools-toolsetbuttons.gif

Button Functions:
 - file:RPI_Tools-toolsetbutton-capture.gif   :: Capture, ssave, and open an image from the camera.  Images are stored in the same location, and with the same file name conventions, used by =piSnap.sh=.
 - file:RPI_Tools-toolsetbutton-settings.gif  :: Change some configuration options 

#+ATTR_HTML: :align center :width 400px
file:RPI_Tools-dialog-settings.gif

   - Specify a group for the captured image filenames.  See [[#rpi-pisnap][=piSnap=]] for filename details.
   - Specify an annotation for the captured image filenames.  See [[#rpi-pisnap][=piSnap=]] for filename details.
   - Set captured image format (jpg or png)
   - Set captured image scale (100% or 50%)
   - Set the scale factor for capture preview
   - Set the scale factor for the live video feed
   - Turn on/off asking for settings for each capture -- essentially pops up the settings dialog box everything the capture button is hit
   - Turn on/off repeated capture mode -- repeatedly captures images.  Most useful if a group is set.
   - Turn on/off live video preview before a capture.
   - Turn on/off loading images after capture.
   - Turn on/off running the set image scale tool after each capture if the image scale is not already set
   - Turn on/off debugging

 - file:RPI_Tools-toolsetbutton-video.gif      :: Live video feed from camera.  Note the scale setting for the live video feed is diffrent from the capture preview scale.

If "Change Settings Before Capture" is set, then a simplified settings dialog box will appear before the video feed window.

#+ATTR_HTML: :align center :width 400px
file:RPI_Tools-dialog-settings-v.gif


 - file:RPI_Tools-toolsetbutton-load.gif      :: Load previous capture(s) from camera using the ImageJ/Fiji macro above or the =piSnap.sh= script.  

#+ATTR_HTML: :align center :width 400px
file:RPI_Tools-dialog-loadOld.gif

 - file:RPI_Tools-toolsetbutton-scale.gif     :: Set image scale based upon microscope settings.  This script contains hardwired settings for my specific microscope and lenses, and may require modification for your microscope.

#+ATTR_HTML: :align center :width 400px
file:RPI_Tools-dialog-setscale.gif

   - The choice of microscope enables a calibration correction factor in the final computation
   - The "Adjust for Resolution" option adjusts the scale if the number of horizontal pixels in the image differs from the horizontal resolution of the
     sensor.  Most commonly this use used when the sensor is used in 2x2 mode yielding smaller image.  This option also works if the image is resized after
     the fact.  

#+INCLUDE:RPI_tools.ijm src c

*** Macro Test Installer                                           :noexport:

When developing the ImageJ/Fiji macro, I use the following script to put the script in place and run ImageJ/Fiji so I can test it (on RPI or Windows).  This
script is not useful for someone simply wanting to use the macro.

# #+INCLUDE:RPI_tools_install.sh src sh

